on:
  workflow_call:
    inputs:
      real-publish:
        required: false
        type: boolean
        default: false
        description: If true, will publish to prod pypi, otherwise it will publish to test. Defaults to false.
name: release-please
jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      #----------------------------------------------
      # install your root project, if required
      #----------------------------------------------
      - name: Install library
        run: poetry install --no-interaction
      #----------------------------------------------
      #              run test suite
      #----------------------------------------------
      - name: Run Tests / Sanity Check
        run: |
          source .venv/bin/activate
          pytest tests/
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          release-type: python
          package-name: singleton-type
      #----------------------------------------------
      #              build release
      #----------------------------------------------
      - name: Build
        if: ${{ steps.release.outputs.release_created }}
        run: poetry build
      #----------------------------------------------
      #              publish release to pypi test
      #----------------------------------------------
      - name: Publish to test pipy
        if: ${{ ! inputs.real-publish }}
        run: |
          poetry config repositories.test-pypi https://test.pypi.org/legacy/
          poetry config pypi-token.test-pypi ${{secrets.PYPI_TEST_TOKEN}}
          poetry publish -r test-pypi
      #----------------------------------------------
      #              publish release tp pypi prod
      #----------------------------------------------
      - name: Publish to prod pipy
        if: ${{ inputs.real-publish }}
        run: |
          poetry config repositories.test-pypi https://test.pypi.org/legacy/
          poetry config pypi-token.test-pypi ${{secrets.PYPI_TEST_TOKEN}}
          poetry publish -r test-pypi
